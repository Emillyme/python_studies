Index: agenda.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/agenda.py b/agenda.py
new file mode 100644
--- /dev/null	(date 1707267446202)
+++ b/agenda.py	(date 1707267446202)
@@ -0,0 +1,76 @@
+import time
+
+def menu():
+    while True:
+        opcao = input('''
+==========================================
+            Agenda em Python
+Menu:   
+[1] CADASTRAR CONTATO
+[2] LISTAR CONTATO
+[3] DELETAR CONTATO
+[4] BUSCAR CONTATO PELO NOME
+[0] SAIR
+==========================================
+Escolha uma opção acima: ''')
+
+        if opcao == '1':
+            cadastrarContato()
+            break
+        elif opcao == '2':
+            listarContato()
+            break
+        elif opcao == '3':
+            deletarContato()
+            break
+        elif opcao == '4':
+            buscarContato()
+            break
+        elif opcao == '0':
+            print('Saindo do programa...')
+            time.sleep(1.5)
+
+        else:
+            print('Opção inválida. Tente novamente.')
+            time.sleep(1.5)
+
+def cadastrarContato():
+    idContato = input('Escolha um ID para o contato: ')
+    nome = input('Escolha um nome para o contato: ')
+    telefone = input('Escreva o telefone do contato: ')
+    email = input('Escreva o e-mail do contato: ')
+
+    try:
+        with open("agenda.txt", "a") as agenda:
+            dados = f'{idContato};{nome};{telefone};{email}\n'
+            agenda.write(dados)
+            agenda.close()
+        print(f'Contato gravado com sucesso!')
+    except:
+        print(f'ERRO na gravação de contato!')
+
+
+def listarContato():
+    agenda = open("agenda.txt", "r")
+    for contato in agenda:
+        print(contato)
+    agenda.close()
+
+def deletarContato():
+    print('Deletando contato...')
+
+def buscarContato():
+    nome = input(f'Digite o nome no qual será procurado: ')
+    agenda = open("agenda.txt", "r")
+    for contato in agenda:
+        if nome in (contato.split(";"))[1]:
+            print(contato)
+        else:
+            print(f"Não há {nome} em sua agenda telefonica")
+            break
+    agenda.close()
+
+def main():
+    menu()
+
+main()
Index: aula07.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/aula07.py b/aula07.py
new file mode 100644
--- /dev/null	(date 1707677562303)
+++ b/aula07.py	(date 1707677562303)
@@ -0,0 +1,162 @@
+def exercicios():
+    opcao = input('''
+==================================
+        EXERCÍCIOS AULA 7:
+
+[1] Prints e formas de usa-lo 
+[2] Operadores
+[3] Antecessor e Sucessor
+[4] Dobro, Triplo e Raiz Quadrada
+[5] Média
+[6] Conversão: metros para centímetros e milímetros
+[7] Tabuada
+[8] Conversão Moedas
+[9] Pintando a Parede
+[10] Desconto
+    
+Digite o exercício que você quer ver: ''')
+
+    if opcao == '1':
+        printsFormas()
+    elif opcao == '2':
+        operadores()
+    elif opcao == '3':
+        anteSuce()
+    elif opcao == '4':
+        dobroTriploRaiz()
+    elif opcao == '5':
+        media()
+    elif opcao == '6':
+        conversao()
+    elif opcao == '7':
+        tabuada()
+    elif opcao == '8':
+        conversaoMoedas()
+    elif opcao == '9':
+        pintandoParede()
+    elif opcao == '10':
+        desconto()
+
+
+def printsFormas():
+    print('='*10) #repete muitas vezes o =
+    nome = input('qual é o seu nome? ')
+
+    # print('Prazer em te conhecer {:>20}!'.format(nome))
+    # print('Prazer em te conhecer {:20}!'.format(nome))
+    # print('Prazer em te conhecer {:^20}!'.format(nome))
+    # print('Prazer em te conhecer {:=^20}!'.format(nome))
+
+    #outra maneira:
+    print(f'Prazer em te conhecer {nome:>20}!')
+    print(f'Prazer em te conhecer {nome:20}!')
+    print(f'Prazer em te conhecer {nome:^20}!')
+    print(f'Prazer em te conhecer {nome:=^20}!')
+    print(f'Prazer em te conhecer {nome:#^30}!')
+    print(f'Prazer em te conhecer {nome:-^30}!')
+
+def operadores():
+    n1 = int(input('digite o valor 1: '))
+    n2 = int(input('digite o valor 2: '))
+    s = n1 + n2
+    m = n1 * n2
+    d = n1 / n2
+    di = n1 // n2
+    e = n1 ** n2
+
+    print(f'a soma é {s}, a multiplicação é {m}, a divisão {d:.2f},'
+          f' a divisão inteira é {di} e a exponenciação é {e}!')
+
+def anteSuce():
+    num = int(input('Digite um número: '))
+    ante = num - 1
+    suce = num + 1
+
+    print(f'O sucessor do número {num} é {suce}', end=' ')
+    print(f'e seu antecessor é {ante}!')
+
+def  dobroTriploRaiz():
+    num = int(input('Digite um número: '))
+    dobro = num*2
+    triplo = num*3
+    raiz = num**(1/2)
+
+    print(f'SOBRE O NÚMERO {num}:\n'
+          f'dobro =  {dobro} \n'
+          f'triplo =  {triplo}\n'
+          f'raiz quadrada = {raiz}')
+
+def media():
+    notas = []
+    provas = int(input('Quantas provas você deu esse semestre: '))
+    for i in range(1, provas+1):
+        provas = int(input(f'Digite a {i}° nota: '))
+        notas.append(provas)
+
+    soma = sum(notas)  # soma todos os elementos dentro do array
+    quantidadeProvas = len(notas)  # fala a quantidade de elementos no array
+    media = soma/quantidadeProvas
+
+    print(notas)
+    print(f'a media dessas notas é {media}')
+
+    # media = somaDasNotas/quantidade
+
+def conversao():
+    metros = int(input('Digite em metros para a conversão: '))
+    pCentimentos = metros * 100
+    pMilimetros = metros * 1000
+
+    print(f'Metros: {metros} \n'
+          f'{metros}m para centimetros: {pCentimentos} \n'
+          f'{metros}m para milímetros: {pMilimetros}')
+
+def tabuada():
+    num = int(input('Digite o número para fazer a tabuada: '))
+    quantidade = int(input('Até que número deseja que vá a tabuada? '))
+    for i in range(quantidade+1):
+        m = num*i
+        print(f'{num} x {i} = {m}')
+
+def conversaoMoedas():
+    escolha = (input('''
+    =================================
+    Escolha a conversão: 
+    
+    [1] Real(R$) para Dolar(US$)
+    [2] Dolar(US$) para Real(R$)
+    
+    '''))
+
+    if escolha == '2':
+        dolares = float(input('Digite quanto dinheiro em DÓLAR você tem: '))
+        taxa = 5
+        conversao = dolares * taxa
+        print(f'Você tem US${dolares} que convertido para reais é R${conversao:.2f}!')
+
+    elif escolha == '1':
+        dindin = float(input('Digite quanto dinheiro em REAIS você tem: '))
+        dolar = 4.95
+        quant = (dindin/dolar)
+        print(f'Você pode comprar US${quant:.2f} com seus R${dindin:}')
+
+
+def pintandoParede():
+    largura = int(input('Digite qual a largura da sua parede(m): '))
+    altura = int(input('Digite qual a altura da sua parede(m): '))
+    area = largura*altura
+    pintura = area/2
+
+    print(f'sua parede tem a área de {area} e a quantidade de tinta necessária para a pintura é {pintura:.1f} litros')
+
+def desconto():
+    precoOriginal = int(input('Digite o preço original: '))
+    desconto = int(input('Digite o desconto que será aplicado: '))
+    precoComDesconto = precoOriginal - (precoOriginal * desconto/100)
+
+    print(f'O preço R${precoOriginal:.2f} com desconto de {desconto}%, vai ficar R${precoComDesconto:.2f}!')
+
+def main():
+    exercicios()
+
+main()
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e14a5f1a-038d-4ba7-8e45-968c33abaa97\" name=\"Changes\" comment=\"test_commit\">\r\n      <change afterPath=\"$PROJECT_DIR$/ex0004.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/ex001.py\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/ex003.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ex000.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ex000.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2bQQTKGcwnl4qkF37D8INEL7CPk\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Python.ex000.executor\": \"Run\",\r\n    \"Python.ex0004.executor\": \"Run\",\r\n    \"Python.ex001.executor\": \"Run\",\r\n    \"Python.ex002.executor\": \"Run\",\r\n    \"Python.ex003.executor\": \"Run\",\r\n    \"Python.ex005.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"settings.editor.selected.configurable\": \"proofread\",\r\n    \"settings.editor.splitter.proportion\": \"0.2690583\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\usuario\\PythonCharm\\python_studies\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-50da183f06c8-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.13135.95\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e14a5f1a-038d-4ba7-8e45-968c33abaa97\" name=\"Changes\" comment=\"\" />\r\n      <created>1706144829621</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1706144829621</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"test_commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706145261721</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706145261721</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"test_commit\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"test_commit\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 353ce40c1ff83153e7e9e9da4eb7f44b0e5942cc)
+++ b/.idea/workspace.xml	(date 1707663024854)
@@ -4,12 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e14a5f1a-038d-4ba7-8e45-968c33abaa97" name="Changes" comment="test_commit">
-      <change afterPath="$PROJECT_DIR$/ex0004.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/ex001.py" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/ex003.py" afterDir="false" />
+    <list default="true" id="e14a5f1a-038d-4ba7-8e45-968c33abaa97" name="Changes" comment="more exercises">
+      <change afterPath="$PROJECT_DIR$/agenda.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/aula07.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ex000.py" beforeDir="false" afterPath="$PROJECT_DIR$/ex000.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -25,9 +23,12 @@
   </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="file://$PROJECT_DIR$/aula07.py" root0="FORCE_HIGHLIGHTING" />
   </component>
   <component name="ProjectColorInfo">{
-  &quot;associatedIndex&quot;: 4
+  &quot;associatedIndex&quot;: 6
 }</component>
   <component name="ProjectId" id="2bQQTKGcwnl4qkF37D8INEL7CPk" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true">
@@ -39,6 +40,8 @@
   </component>
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
+    "Python.agenda.executor": "Run",
+    "Python.aula07.executor": "Run",
     "Python.ex000.executor": "Run",
     "Python.ex0004.executor": "Run",
     "Python.ex001.executor": "Run",
@@ -48,7 +51,7 @@
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "git-widget-placeholder": "main",
-    "settings.editor.selected.configurable": "proofread",
+    "settings.editor.selected.configurable": "configurable.group.tools",
     "settings.editor.splitter.proportion": "0.2690583"
   }
 }]]></component>
@@ -81,11 +84,20 @@
       <option name="project" value="LOCAL" />
       <updated>1706145261721</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="more exercises">
+      <option name="closed" value="true" />
+      <created>1706971166845</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1706971166845</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="test_commit" />
-    <option name="LAST_COMMIT_MESSAGE" value="test_commit" />
+    <MESSAGE value="more exercises" />
+    <option name="LAST_COMMIT_MESSAGE" value="more exercises" />
   </component>
 </project>
\ No newline at end of file
